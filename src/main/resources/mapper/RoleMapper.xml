<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wsylp.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="wsylp.po.Role">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    </resultMap>
    <sql id="Base_Column_List">
        id, name, role_code, remark, create_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_role
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="wsylp.po.Role">
        insert into t_role (id, name, role_code,
        remark, create_time)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="wsylp.po.Role">
        insert into t_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="roleCode != null">
                role_code,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null">
                #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="wsylp.po.Role">
        update t_role
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null">
                role_code = #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="wsylp.po.Role">
        update t_role
        set name = #{name,jdbcType=VARCHAR},
        role_code = #{roleCode,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getRolesByLoginName" resultType="java.lang.String" resultMap="BaseResultMap">
        select
         b.*
        from t_user a ,t_role b ,t_user_role c
        where a.id = c.user_id and b.id = c.role_id
        <if test="loginName !=null">
            and login_name = #{loginName,jdbcType=VARCHAR}
        </if>
    </select>
</mapper>